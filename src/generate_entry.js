// src/generate_entry.js
// –ò—Å–ø–æ–ª—å–∑—É–µ–º fs/promises –Ω–∞–ø—Ä—è–º—É—é
const fs = require('fs/promises');
const path = require('path');
const { generateEssay, generateReflection } = require('./utils/openrouter');

// –ü—É—Ç—å –∫ –∂—É—Ä–Ω–∞–ª—É
const JOURNAL_PATH = path.join(__dirname, '../data/journal.json');
// –ù–û–í–û–ï: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ–≥–æ–≤
const TAG_STATS_PATH = path.join(__dirname, '../data/tag_statistics.json');
// –ù–û–í–û–ï: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
const ANALYSIS_PATH = path.join(__dirname, '../data/literary_analysis.json');
// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
const MAX_RETRIES = 3;
// –ë–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ (–º—Å)
const BASE_DELAY_MS = 2000;

// ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ensureDirectoryExistence, extractTags, extractSimpleDynamicTags, 
// determineReflectionLevel, cleanReflectionText, withRetry –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

/**
 * –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏: –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —ç—Å—Å–µ –∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é.
 * @returns {Promise<{rawEssay: string, rawReflection: string, cleanEntry: string, staticTags: string[], dynamicTags: string[], tags: string[], level: string}>}
 */
async function prepareEntryData() {
  console.log("üß† –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏...");
  
  // --- –ù–û–í–û–ï: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–≤–µ—Ç–æ–≤ –∏–∑ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ ---
  let previousSuggestions = "–°–æ–≤–µ—Ç—ã –æ—Ç –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.";
  try {
    console.log(`–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–≤–µ—Ç–æ–≤ –∏–∑: ${ANALYSIS_PATH}`);
    const analysisData = await fs.readFile(ANALYSIS_PATH, 'utf8');
    if (analysisData.trim()) {
      const parsedAnalysis = JSON.parse(analysisData);
      if (Array.isArray(parsedAnalysis.suggestions) && parsedAnalysis.suggestions.length > 0) {
        // –ë–µ—Ä–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–≤–µ—Ç–∞
        const lastSuggestions = parsedAnalysis.suggestions.slice(-3);
        previousSuggestions = lastSuggestions.join('\n'); // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤ —Å—Ç—Ä–æ–∫–∏, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${lastSuggestions.length} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–≤–µ—Ç–æ–≤ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞.`);
      } else {
         console.log("‚ö†Ô∏è –í —Ñ–∞–π–ª–µ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ—Ç –º–∞—Å—Å–∏–≤–∞ 'suggestions' –∏–ª–∏ –æ–Ω –ø—É—Å—Ç.");
      }
    } else {
       console.log("‚ö†Ô∏è –§–∞–π–ª –∞–Ω–∞–ª–∏–∑–∞ –ø—É—Å—Ç.");
    }
  } catch (err) {
    if (err.code === 'ENOENT') {
      console.log("‚ÑπÔ∏è –§–∞–π–ª –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.");
    } else {
      console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:", err.message);
    }
    // previousSuggestions –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }
  // --- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û ---

  // 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —ç—Å—Å–µ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è –¥–∞–Ω–Ω—ã–µ
  console.log("‚úçÔ∏è  –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —ç—Å—Å–µ...");
  // --- –ò–ó–ú–ï–ù–ï–ù–û: –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ generateEssay ---
  const essayData = {
    // –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–µ—Ä—Å–∏–∏ –º–æ–≥–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç–µ–º—ã –∏ —Ç.–¥. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±—ã —É –≤–∞—Å –±—ã–ª–∞ –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º:
    // themes: ["–≤—Ä–µ–º—è", "–ø–∞–º—è—Ç—å", "–æ—Å–æ–∑–Ω–∞–Ω–∏–µ"], 
    previous_suggestions: previousSuggestions // <-- –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–≤–µ—Ç—ã
  };
  const rawEssay = await withRetry(
    () => generateEssay(essayData), // <-- –ü–µ—Ä–µ–¥–∞–µ–º essayData
    MAX_RETRIES,
    BASE_DELAY_MS,
    "–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç—Å—Å–µ"
  );
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---
  
  // --- –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É/–æ–±—Ä–µ–∑–∞–Ω–Ω–æ—Å—Ç—å —ç—Å—Å–µ ---
  if (!rawEssay || rawEssay.trim().length < 10) { // –ü—Ä–∏–º–µ—Ä: –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
     const errorMsg = `–ü–æ–ª—É—á–µ–Ω –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è —ç—Å—Å–µ (–¥–ª–∏–Ω–∞: ${rawEssay?.length || 0}).`;
     console.error(`‚ùå ${errorMsg}`);
     throw new Error(errorMsg);
  }
  console.log("üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç —ç—Å—Å–µ (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤):", rawEssay.substring(0, 100) + (rawEssay.length > 100 ? "..." : ""));
  console.log("üìÑ –î–ª–∏–Ω–∞ —Å—ã—Ä–æ–≥–æ —ç—Å—Å–µ:", rawEssay.length);
  // --- –ö–æ–Ω–µ—Ü –ø—Ä–æ–≤–µ—Ä–∫–∏ ---

  // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
  console.log("üí≠ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é...");
  const rawReflection = await withRetry(
    () => generateReflection(rawEssay), // –ü–µ—Ä–µ–¥–∞–µ–º —ç—Å—Å–µ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
    MAX_RETRIES,
    BASE_DELAY_MS,
    "–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏"
  );

  // --- –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É/–æ–±—Ä–µ–∑–∞–Ω–Ω–æ—Å—Ç—å —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ ---
  if (!rawReflection || rawReflection.trim().length < 10) {
     const errorMsg = `–ü–æ–ª—É—á–µ–Ω –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ (–¥–ª–∏–Ω–∞: ${rawReflection?.length || 0}).`;
     console.error(`‚ùå ${errorMsg}`);
     throw new Error(errorMsg);
  }
  console.log("üí≠ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤):", rawReflection.substring(0, 100) + (rawReflection.length > 100 ? "..." : ""));
  console.log("üí≠ –î–ª–∏–Ω–∞ —Å—ã—Ä–æ–π —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏:", rawReflection.length);
  // --- –ö–æ–Ω–µ—Ü –ø—Ä–æ–≤–µ—Ä–∫–∏ ---

  // 3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç—ã
  console.log("üßÆ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∑–∞–ø–∏—Å–∏...");
  const determinedLevel = determineReflectionLevel(rawReflection);
  const cleanReflection = cleanReflectionText(rawReflection);
  const fullEntryClean = `${rawEssay}\n\n${cleanReflection}`;

  // --- –ì–∏–±—Ä–∏–¥–Ω–æ–µ —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
  const staticTags = extractTags(fullEntryClean); // <-- 1. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–≥–∏
  console.log(`üè∑Ô∏è  –ò–∑–≤–ª–µ—á–µ–Ω–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ–≥–æ–≤: ${staticTags.length}`);

  const dynamicTags = extractSimpleDynamicTags(fullEntryClean); // <-- 2. –ü–æ–ª—É—á–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ç–µ–≥–∏
  console.log(`üè∑Ô∏è  –ò–∑–≤–ª–µ—á–µ–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ç–µ–≥–æ–≤: ${dynamicTags.length}`, dynamicTags);
  
  // 3. –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏ —É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
  const allUniqueTags = Array.from(new Set([...staticTags, ...dynamicTags]));
  console.log(`üè∑Ô∏è  –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤: ${allUniqueTags.length}`);
  // --- –ö–û–ù–ï–¶ –ì–∏–±—Ä–∏–¥–Ω–æ–≥–æ —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---

  console.log(`üìä –£—Ä–æ–≤–µ–Ω—å —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏: ${determinedLevel}`);

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–∫–ª—é—á–∞—è —Ä–∞–∑–¥–µ–ª—å–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  return {
    rawEssay,
    rawReflection,
    cleanEntry: fullEntryClean,
    staticTags, // <-- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
    dynamicTags, // <-- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
    tags: allUniqueTags, // <-- –ò—Ç–æ–≥–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ç–µ–≥–æ–≤
    level: determinedLevel
  };
}

// ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ loadJournal, saveJournal, loadTagStatistics, 
// updateAndSaveTagStatistics, createNewEntry –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π,
// –∫—Ä–æ–º–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–ª–æ–∫–∞ if (require.main === module), –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–∂–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è)

// –ó–∞–ø—É—Å–∫, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  console.log("üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é.");
  (async () => { // –ò—Å–ø–æ–ª—å–∑—É–µ–º IIFE –¥–ª—è async/await
    try {
      await createNewEntry();
      console.log("üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ.");
    } catch (err) {
      console.error("üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π:", err);
      process.exit(1);
    }
  })();
}

module.exports = { createNewEntry };
