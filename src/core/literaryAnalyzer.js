// src/core/literaryAnalyzer.js
const { generateCritique } = require('../utils/openrouter'); // –ü—É—Ç—å –∫ openrouter.js
const { readJSON, writeJSON } = require('../utils/fileUtils'); // –ü—É—Ç—å –∫ fileUtils.js
const {
  JOURNAL_PATH,
  CONTEXTS_PATH,
  ANALYSIS_PATH,
  MAX_RETRIES = 3,
  BASE_DELAY_MS = 2000
} = require('../config'); // –ü—É—Ç—å –∫ config.js

const { withRetry } = require('../utils/retryHandler'); // –ò–º–ø–æ—Ä—Ç –∏–∑ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
const { parseCriticResponse } = require('../utils/responseParser'); // –ò–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
const { loadLastJournalEntry } = require('../data/dataLoader'); // –ò–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –≤ journal.json —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞
 */
async function updateJournalWithCriticTags(analysisResult) {
  try {
    const journal = await readJSON(JOURNAL_PATH);
    if (!Array.isArray(journal) || journal.length === 0) {
      console.warn('‚ö†Ô∏è –ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞.');
      return;
    }

    const lastEntry = journal[journal.length - 1];

    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–≥–∏ –∫—Ä–∏—Ç–∏–∫–∞ –∏–∑ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    const criticTagsFromAnalysis = Array.isArray(analysisResult.tags_for_search) ? analysisResult.tags_for_search : [];
    if (criticTagsFromAnalysis.length > 0) {
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ –∫—Ä–∏—Ç–∏–∫–∞ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –≤ –∑–∞–ø–∏—Å—å
      lastEntry.critic_tags = criticTagsFromAnalysis;

      console.log(`üè∑Ô∏è –¢–µ–≥–∏ –∫—Ä–∏—Ç–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏:`, criticTagsFromAnalysis);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∂—É—Ä–Ω–∞–ª
      await writeJSON(JOURNAL_PATH, journal);
      console.log('‚úÖ –ñ—É—Ä–Ω–∞–ª –æ–±–Ω–æ–≤–ª—ë–Ω —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞.');
    } else {
      console.warn('‚ö†Ô∏è –í –∞–Ω–∞–ª–∏–∑–µ –Ω–µ—Ç —Ç–µ–≥–æ–≤ –∫—Ä–∏—Ç–∏–∫–∞ (tags_for_search) –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–ø–∏—Å—å.');
    }
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è journal.json —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞:', e.message);
    // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ —Ç–µ–≥–∏ –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å
  }
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω–µ—Ü contexts.json
 */
async function updateContextsWithSuggestion(analysisResult) {
  try {
    // 1. –ü—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ result (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω –≤ next_context_suggestion)
    const newContextSuggestion = analysisResult.next_context_suggestion;

    if (!newContextSuggestion || typeof newContextSuggestion !== 'string' || newContextSuggestion.trim() === '') {
      console.warn('‚ö†Ô∏è –ö—Ä–∏—Ç–∏–∫ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª next_context_suggestion –∏–ª–∏ –æ–Ω –ø—É—Å—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ contexts.json.');
      return;
    }

    console.log(`üîÑ –ö—Ä–∏—Ç–∏–∫ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: ${newContextSuggestion.substring(0, 60)}...`);

    // 2. –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—É—â–∏–µ contexts
    let currentContextsData;
    try {
      currentContextsData = await readJSON(CONTEXTS_PATH);
      if (!currentContextsData || !Array.isArray(currentContextsData.contexts)) {
        throw new Error("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ contexts.json –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è { contexts: [] }.");
      }
    } catch (e) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è contexts.json:', e.message);
      // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Å–ª–æ–º–∞–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π
      currentContextsData = { contexts: [] };
      console.log('‚ÑπÔ∏è –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª contexts.json.');
    }

    // 3. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω–µ—Ü
    // –í–ê–ñ–ù–û: –£—á–∏—Ç—ã–≤–∞–µ–º, —á—Ç–æ literary_critic –º–æ–∂–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑ id, –∫–∞–∫ –±—ã–ª–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Ä–∞–Ω–µ–µ.
    // –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å id –∑–¥–µ—Å—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã –∏–ª–∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω—ã–π.
    // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å, –∫–∞–∫ –∏ –±—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Ä–∞–Ω–µ–µ, –Ω–æ –æ—Ç–º–µ—á–∞–µ–º.
    currentContextsData.contexts.push({ context: newContextSuggestion.trim() });

    // 4. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å contexts.json
    await writeJSON(CONTEXTS_PATH, currentContextsData);
    console.log(`‚úÖ –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω–µ—Ü contexts.json. –í—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤: ${currentContextsData.contexts.length}.`);
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è contexts.json —Å –Ω–æ–≤—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º:', e.message);
    // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è
  }
}


/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏
 */
async function runLiteraryCritique() {
  console.log('üîç –ó–∞–ø—É—Å–∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
  const lastEntry = await loadLastJournalEntry(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é

  // –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∫–∞–∫ –≤ —ç—Å—Å–µ: "7 –æ–∫—Ç—è–±—Ä—è 2025 –≥–æ–¥–∞"
  const today = new Date().toLocaleDateString('ru-RU', {
    day: 'numeric',
    month: 'long',
    year: 'numeric'
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º *–≤–µ—Å—å* –∂—É—Ä–Ω–∞–ª –¥–ª—è —Å—Ç–∏–ª–µ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏
  const journal = await readJSON(JOURNAL_PATH);
  if (!Array.isArray(journal) || journal.length === 0) {
    throw new Error('–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç ‚Äî –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∏–ª–µ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é.');
  }

  // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∏–ª–µ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 3 –∑–∞–ø–∏—Å–µ–π
  const lastEntries = journal.slice(-3);
  const style_history = lastEntries.map(entry => ({
    date: entry.date,
    reflection_level: entry.reflection_level || '—Å—Ä–µ–¥–Ω–∏–π',
    tags: Array.isArray(entry.tags) ? entry.tags : [],
    word_count: (entry.entry || '').split(/\s+/).filter(w => w).length,
    // –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–∑–Ω–∞–∫ –º–µ—Ç–∞—Ñ–æ—Ä—ã ‚Äî –Ω–∞–ª–∏—á–∏–µ "–∫–∞–∫" –∏–ª–∏ "—Å–ª–æ–≤–Ω–æ"
    has_metaphor: /(?:–∫–∞–∫|—Å–ª–æ–≤–Ω–æ|–±—É–¥—Ç–æ|—Ç–æ—á–Ω–æ)\s/i.test(entry.entry || '')
  }));

  const critiqueData = {
    entry_date: today,
    current_mood_name: lastEntry.mood?.name || 'still',
    current_season: lastEntry.season || 'winter',
    current_context: lastEntry.context || '–ö–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.',
    entry_tags: lastEntry.tags || [],
    entry_reflection_level: lastEntry.reflection_level || '—Å—Ä–µ–¥–Ω–∏–π',
    entry_essay: lastEntry.raw_essay || '',
    entry_reflection: lastEntry.raw_reflection || '',
    style_history: style_history
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Ä–µ—Ç—Ä–∞—è–º–∏
  const rawResponse = await withRetry(
    () => generateCritique(critiqueData),
    MAX_RETRIES,
    BASE_DELAY_MS,
    '–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞'
  );

  // –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞
  const analysis = parseCriticResponse(rawResponse); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é

  // –£–¥–∞–ª—è–µ–º generated_at, –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –µ–≥–æ –¥–æ–±–∞–≤–∏–ª–∞ (—á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–ª —Å–∏—Å—Ç–µ–º–Ω—É—é –¥–∞—Ç—É)
  delete analysis.generated_at;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç–æ–π
  const result = {
    generated_at: new Date().toISOString(),
    ...analysis
  };

  await writeJSON(ANALYSIS_PATH, result);
  console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ ${ANALYSIS_PATH}`);

  // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞
  await updateJournalWithCriticTags(result);

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
  await updateContextsWithSuggestion(result);

}

module.exports = { runLiteraryCritique };

// --- –ó–∞–ø—É—Å–∫ –Ω–∞–ø—Ä—è–º—É—é ---
if (require.main === module) {
  (async () => {
    try {
      await runLiteraryCritique();
    } catch (err) {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ literaryAnalyzer.js:', err.message);
      process.exit(1);
    }
  })();
}
