// src/utils/sceneParser.js

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç Pose –∏ Setting –∏–∑ –±–ª–æ–∫–∞ [SCENE] –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —ç—Å—Å–µ.
 * @param {string} rawEssayText - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç —ç—Å—Å–µ, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –±–ª–æ–∫ [SCENE].
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ pose, setting –∏ essayWithoutScene.
 */
function parseScene(rawEssayText) {
  let pose = "she is sitting curled up in a worn vintage armchair, with her legs tucked under her.";
  let setting = "a dimly lit room filled with books, the last rays of the autumn sun.";

  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, —É—á–∏—Ç—ã–≤–∞—é—â–µ–µ [/SCENE]
  const sceneMatch = rawEssayText.match(/\[SCENE\]\s*\n(?:Pose:\s*(.*?)\s*\n)?(?:Setting:\s*(.*?)\s*\n)?\s*\[\/SCENE\]/);

  if (sceneMatch) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    pose = sceneMatch[1] ? sceneMatch[1].trim().replace(/\.$/, '') : pose;
    setting = sceneMatch[2] ? sceneMatch[2].trim().replace(/\.$/, '') : setting;
    console.log(`üñºÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω–∞ —Å—Ü–µ–Ω–∞: –ü–æ–∑–∞:"${pose}", –û–±—Å—Ç–∞–Ω–æ–≤–∫–∞:"${setting}"`);
  } else {
    console.warn('‚ö†Ô∏è –ë–ª–æ–∫ [SCENE] –≤ —Ñ–æ—Ä–º–∞—Ç–µ [SCENE]\nPose: ...\nSetting: ...\n[/SCENE] –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.');
  }

  // –£–¥–∞–ª—è–µ–º –í–ï–°–¨ –±–ª–æ–∫ [SCENE] ... [/SCENE] –∏–∑ —Ç–µ–∫—Å—Ç–∞ —ç—Å—Å–µ
  const essayWithoutScene = rawEssayText.replace(/\[SCENE\][\s\S]*?\[\/SCENE\][\s\n]*/, '').trim();

  return { pose, setting, essayWithoutScene };
}

module.exports = { parseScene };
