// src/utils/responseParser.js

/**
 * –ü–∞—Ä—Å–∏—Ç —Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏, –æ–∂–∏–¥–∞—è JSON.
 * –£–¥–∞–ª—è–µ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ (```json, ```) –∏ –ø—ã—Ç–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å.
 * @param {string} rawResponse - –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏.
 * @returns {Object} - –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π JSON-–æ–±—ä–µ–∫—Ç.
 * @throws {Error} - –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç, –Ω–µ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π JSON.
 */
function parseCriticResponse(rawResponse) {
  if (typeof rawResponse !== 'string' || rawResponse.trim() === '') {
    throw new Error('–ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç (–Ω–µ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞).');
  }

  try {
    // –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ Markdown
    const cleanJson = rawResponse
      .replace(/^```json\s*/i, '') // –£–±–∏—Ä–∞–µ–º ```json –≤ –Ω–∞—á–∞–ª–µ
      .replace(/\s*```$/i, '')    // –£–±–∏—Ä–∞–µ–º ``` –≤ –∫–æ–Ω—Ü–µ
      .trim();                    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã

    if (!cleanJson) {
      throw new Error('–ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π JSON-–æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏.');
    }

    return JSON.parse(cleanJson);
  } catch (e) {
    if (e instanceof SyntaxError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç –∫—Ä–∏—Ç–∏–∫–∞:', e.message);
      console.error('üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ (–¥–æ –æ—á–∏—Å—Ç–∫–∏):');
      console.error(rawResponse);
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏ (–æ—à–∏–±–∫–∞ JSON.parse).');
    } else {
      // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –ª–æ–≥–∏–∫–∏ –≤—ã—à–µ)
      throw e;
    }
  }
}

module.exports = { parseCriticResponse };
