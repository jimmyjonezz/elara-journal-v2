// scripts/literary_critic.js

const fs = require('fs/promises');
const path = require('path');
const { generateEssay, generateReflection } = require('../src/utils/openrouter'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞

// --- –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º ---
const JOURNAL_PATH = path.join(__dirname, '../data/journal.json');
const ANALYSIS_OUTPUT_PATH = path.join(__dirname, '../data/literary_analysis.json');

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OpenRouter ---
// –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ OPENROUTER_API_KEY –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY;
const API_URL = "https://openrouter.ai/api/v1/chat/completions";
const MODEL = "qwen/qwen3-8b:free"; // –ò–ª–∏ –ª—é–±–∞—è –¥—Ä—É–≥–∞—è –ø–æ–¥—Ö–æ–¥—è—â–∞—è –º–æ–¥–µ–ª—å

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–º–ø—Ç –≤ OpenRouter API –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç.
 * @param {string} prompt - –ü—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–¥–µ–ª–∏.
 * @returns {Promise<string>} - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
 */
async function callOpenRouter(prompt) {
  if (!OPENROUTER_API_KEY) {
    throw new Error("API –∫–ª—é—á OpenRouter –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OPENROUTER_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.");
  }

  console.log("-> –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ OpenRouter –¥–ª—è Literary Critic...");

  const response = await fetch(API_URL, {
    method: "POST",
    headers: {
      "Authorization": `Bearer ${OPENROUTER_API_KEY}`,
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vercel –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      "HTTP-Referer": process.env['VERCEL_URL'] ? `https://${process.env['VERCEL_URL']}` : "https://elara-mystery-frontend.vercel.app", // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
      "X-Title": "Elara Journal - Literary Critic Analysis",
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      model: MODEL,
      messages: [
        { role: "user", content: prompt }
      ],
      temperature: 0.7, // –ù–µ–º–Ω–æ–≥–æ –º–µ–Ω—å—à–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      max_tokens: 1500, // –î–∞–µ–º –ø–æ–±–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    })
  });

  if (!response.ok) {
    const errorText = await response.text();
    console.error(`<- –û—à–∏–±–∫–∞ –æ—Ç OpenRouter API: ${response.status} - ${errorText}`);
    throw new Error(`OpenRouter API –æ—à–∏–±–∫–∞: ${response.status} - ${errorText}`);
  }

  const data = await response.json();
  const aiResponse = data.choices[0]?.message?.content?.trim();
  
  if (!aiResponse) {
      throw new Error("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ OpenRouter.");
  }

  console.log("<- –û—Ç–≤–µ—Ç –æ—Ç OpenRouter (Literary Critic) –ø–æ–ª—É—á–µ–Ω.");
  return aiResponse;
}


/**
 * –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞.
 * @param {Array} journalEntries - –ú–∞—Å—Å–∏–≤ –∑–∞–ø–∏—Å–µ–π –∏–∑ journal.json.
 * @returns {string} - –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç.
 */
function createCritiquePrompt(journalEntries) {
    // –°–±–æ—Ä –±–∞–∑–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const totalEntries = journalEntries.length;
    const levels = journalEntries.reduce((acc, entry) => {
        acc[entry.reflection_level] = (acc[entry.reflection_level] || 0) + 1;
        return acc;
    }, {});
    const allTags = journalEntries.flatMap(entry => entry.tags || []);
    const uniqueTags = [...new Set(allTags)];
    const tagCounts = allTags.reduce((acc, tag) => {
        acc[tag] = (acc[tag] || 0) + 1;
        return acc;
    }, {});
    const sortedTags = Object.entries(tagCounts).sort((a, b) => b[1] - a[1]);

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫—Ä–∏—Ç–∏–∫–∞
    let contextSummary = `–ê–Ω–∞–ª–∏–∑–∏—Ä—É—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –∂—É—Ä–Ω–∞–ª –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–≠–ª–∞—Ä–∞", —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ ${totalEntries} –∑–∞–ø–∏—Å–µ–π.\n`;
    contextSummary += `–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏: ${JSON.stringify(levels)}.\n`;
    contextSummary += `–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ (–≤—Å–µ–≥–æ ${uniqueTags.length}): ${uniqueTags.slice(0, 20).join(', ')}...\n`; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-20
    contextSummary += `–°–∞–º—ã–µ —á–∞—Å—Ç—ã–µ —Ç–µ–≥–∏: ${sortedTags.slice(0, 10).map(([tag, count]) => `${tag}(${count})`).join(', ')}.\n`;

    // –í—ã–±–æ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3)
    const recentEntriesForAnalysis = journalEntries.slice(-Math.min(3, journalEntries.length));

    let detailedEntriesSection = "\n--- –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• –ó–ê–ü–ò–°–ï–ô ---\n";
    recentEntriesForAnalysis.forEach((entry, index) => {
        // –†–∞–∑–¥–µ–ª—è–µ–º —ç—Å—Å–µ –∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é
        const parts = entry.entry.split('\n\n');
        let essayPart = '';
        let reflectionPart = '';
        if (parts.length >= 2) {
            essayPart = parts.slice(0, -1).join('\n\n');
            reflectionPart = parts[parts.length - 1];
        } else {
            essayPart = entry.entry; // –ï—Å–ª–∏ –Ω–µ—Ç —á–µ—Ç–∫–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, –±–µ—Ä–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∫–∞–∫ —ç—Å—Å–µ
        }

        detailedEntriesSection += `\n–ó–ê–ü–ò–°–¨ ${index + 1} (–î–∞—Ç–∞: ${entry.date}, –£—Ä–æ–≤–µ–Ω—å —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏: ${entry.reflection_level}, –¢–µ–≥–∏: ${(entry.tags || []).join(', ')})\n`;
        detailedEntriesSection += `–≠–°–°–ï:\n${essayPart}\n---\n`;
        detailedEntriesSection += `–†–ï–§–õ–ï–ö–°–ò–Ø:\n${reflectionPart}\n---\n`;
    });

    // --- –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç ---
    const prompt = `
–¢—ã ‚Äî –≤—ã—Å–æ–∫–æ–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫—Ä–∏—Ç–∏–∫ –∏ —Ñ–∏–ª–æ–ª–æ–≥. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞ –∞–≤—Ç–æ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏ –≠–ª–∞—Ä–∞.

${contextSummary}

${detailedEntriesSection}

–ù–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ–π —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑. –û—Ç–≤–µ—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

{
  "generated_at": "ISO-–¥–∞—Ç–∞-–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏-–∞–Ω–∞–ª–∏–∑–∞",
  "summary": "–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –æ–± –æ—Å–Ω–æ–≤–Ω–æ–º —Å—Ç–∏–ª–µ –∏ —Ç–µ–º–∞—Ö –≠–ª–∞—Ä—ã.",
  "tone_and_style": "–ê–Ω–∞–ª–∏–∑ —Ç–æ–Ω–∞ –∏ —Å—Ç–∏–ª—è –ø–∏—Å—å–º–∞ –≠–ª–∞—Ä—ã. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–∏ –æ–Ω–∞ –º–µ—Ç–∞—Ñ–æ—Ä—ã, –∫–∞–∫–æ–≤ –µ—ë –ª–µ–∫—Å–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä, —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, —Ä–∏—Ç–º? –ï—Å—Ç—å –ª–∏ —É–∑–Ω–∞–≤–∞–µ–º—ã–µ –ø–∏—Å–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∏–µ–º—ã?",
  "themes": "–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –∏ –º–æ—Ç–∏–≤—ã, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –≤ –∑–∞–ø–∏—Å—è—Ö. –ö–∞–∫ –æ–Ω–∏ —Å–æ–æ—Ç–Ω–æ—Å—è—Ç—Å—è —Å –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã–º–∏ —Ç–µ–≥–∞–º–∏?",
  "evolution": "–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ—Å–ª–µ–¥–∏—Ç—å —ç–≤–æ–ª—é—Ü–∏—é —Å—Ç–∏–ª—è –∏–ª–∏ —Ç–µ–º–∞—Ç–∏–∫–∏ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º? (–î–∞–∂–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –º–∞–ª–æ, –≤—ã—Å–∫–∞–∑—ã–≤–∞–π –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ).",
  "literary_comparisons": "–° –∫–∞–∫–∏–º–∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–º–∏ —Ç–µ—á–µ–Ω–∏—è–º–∏, –∂–∞–Ω—Ä–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–Ω–µ–≤–Ω–∏–∫–∏, —ç—Å—Å–µ–∏—Å—Ç–∏–∫–∞, —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø—Ä–æ–∑–∞) –∏–ª–∏ –∞–≤—Ç–æ—Ä–∞–º–∏ –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ –≠–ª–∞—Ä—ã? –ü–æ—á–µ–º—É?",
  "reflexive_aspect": "–ö–∞–∫ —É—Ä–æ–≤–µ–Ω—å —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ (–Ω–∏–∑–∫–∏–π, —Å—Ä–µ–¥–Ω–∏–π, –≤—ã—Å–æ–∫–∏–π) –≤–ª–∏—è–µ—Ç –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä —Ç–µ–∫—Å—Ç–∞? –ö–∞–∫ –≠–ª–∞—Ä–∞ —Ä–µ—Ñ–ª–µ–∫—Å–∏—Ä—É–µ—Ç?",
  "linguistic_patterns": "–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —è–∑—ã–∫–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã, —á–∞—Å—Ç—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ—Ä–∞–∑—ã, –∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.",
  "conclusion": "–û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –≠–ª–∞—Ä—ã. –ï–µ —Å–∏–ª—å–Ω—ã–µ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∫–∞–∫ –ø–∏—Å–∞—Ç–µ–ª—è —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–æ–≤–µ–¥–µ–Ω–∏—è."
}

–¢–µ–∫—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –≤ –º–µ—Ä—É –æ–±—Ä–∞–∑–Ω—ã–π. –ò–∑–±–µ–≥–∞–π –æ–±—â–∏—Ö —Ñ—Ä–∞–∑, –æ–ø–∏—Ä–∞–π—Å—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤.
`;
    return prompt;
}


/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–∏—Ç–∏–∫–æ–º.
 */
async function runLiteraryCritique() {
    console.log("üñãÔ∏è  –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫—Ä–∏—Ç–∏–∫ –ø—Ä–∏—Å—Ç—É–ø–∞–µ—Ç –∫ –∞–Ω–∞–ª–∏–∑—É –∂—É—Ä–Ω–∞–ª–∞ –≠–ª–∞—Ä—ã...");

    try {
        // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –∂—É—Ä–Ω–∞–ª
        console.log("üìñ –ó–∞–≥—Ä—É–∂–∞–µ–º –∂—É—Ä–Ω–∞–ª...");
        const journalDataRaw = await fs.readFile(JOURNAL_PATH, 'utf8');
        const journalEntries = JSON.parse(journalDataRaw);
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${journalEntries.length} –∑–∞–ø–∏—Å–µ–π.`);

        if (!Array.isArray(journalEntries) || journalEntries.length === 0) {
            throw new Error("–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω.");
        }

        // 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç
        console.log("üß† –§–æ—Ä–º–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å...");
        const prompt = createCritiquePrompt(journalEntries);

        // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenRouter
        console.log("üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫—Ä–∏—Ç–∏–∫—É...");
        const critiqueText = await callOpenRouter(prompt);

        // 4. –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON-–æ—Ç–≤–µ—Ç
        console.log("üîç –ü—ã—Ç–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç –∫—Ä–∏—Ç–∏–∫–∞...");
        let critiqueJson;
        try {
            // –û—á–µ–Ω—å —á–∞—Å—Ç–æ –ò–ò –¥–æ–±–∞–≤–ª—è–µ—Ç ```json ... ``` –≤–æ–∫—Ä—É–≥ –æ—Ç–≤–µ—Ç–∞
            const cleanedText = critiqueText.replace(/```json\s*|\s*```/g, '').trim();
            critiqueJson = JSON.parse(cleanedText);
            console.log("‚úÖ –û—Ç–≤–µ—Ç –∫—Ä–∏—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∫–∞–∫ JSON.");
        } catch (parseError) {
            console.warn("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç –∫—Ä–∏—Ç–∏–∫–∞ –∫–∞–∫ JSON. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç.");
            // –ï—Å–ª–∏ –Ω–µ JSON, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç —Å –ø–æ–º–µ—Ç–∫–æ–π
            critiqueJson = {
                generated_at: new Date().toISOString(),
                raw_response: critiqueText,
                error: "–û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON"
            };
        }

        // 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.log(`üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ ${ANALYSIS_OUTPUT_PATH}...`);
        await fs.mkdir(path.dirname(ANALYSIS_OUTPUT_PATH), { recursive: true }); // –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        await fs.writeFile(ANALYSIS_OUTPUT_PATH, JSON.stringify(critiqueJson, null, 2));
        console.log("‚úÖ –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.");

    } catch (error) {
        console.error("‚ùå ‚ùå ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞:", error.message);
        console.error("–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:", error.stack);
        
        // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–∞—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–µ
        try {
            const errorData = {
                generated_at: new Date().toISOString(),
                error: error.message,
                stack: error.stack
            };
            await fs.mkdir(path.dirname(ANALYSIS_OUTPUT_PATH), { recursive: true });
            await fs.writeFile(ANALYSIS_OUTPUT_PATH, JSON.stringify(errorData, null, 2));
            console.log("üíæ –ß–∞—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.");
        } catch (saveError) {
            console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–µ:", saveError.message);
        }
        
        process.exit(1);
    }
}

// --- –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ ---
if (require.main === module) {
    console.log("üöÄ –°–∫—Ä–∏–ø—Ç –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é.");
    runLiteraryCritique().then(() => {
        console.log("üèÅ –°–∫—Ä–∏–ø—Ç –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ.");
    }).catch((err) => {
        console.error("üèÅ –°–∫—Ä–∏–ø—Ç –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π:", err);
        process.exit(1);
    });
}

module.exports = { runLiteraryCritique };
