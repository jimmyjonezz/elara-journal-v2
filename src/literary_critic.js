// src/literary_critic.js
const { generateCritique } = require('./utils/openrouter');
const { readJSON, writeJSON } = require('./utils/fileUtils');
const {
  JOURNAL_PATH,
  ANALYSIS_PATH,
  MAX_RETRIES = 3,
  BASE_DELAY_MS = 2000
} = require('./config');

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –ø—Ä–∏ —Å–µ—Ç–µ–≤—ã—Ö/–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
 */
async function withRetry(fn, maxRetries, baseDelay, actionName) {
  let lastError;
  for (let attempt = 1; attempt <= maxRetries; attempt++) {
    try {
      console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries} –¥–ª—è ${actionName}...`);
      const result = await fn();
      console.log(`‚úÖ ${actionName} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}.`);
      return result;
    } catch (error) {
      lastError = error;
      const msg = error.message || String(error);

      // –ü–æ–≤—Ç–æ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
      const isRetryable = 
        msg.includes('502') || 
        msg.includes('503') || 
        msg.includes('504') || 
        msg.includes('Bad Gateway') || 
        msg.includes('Service Unavailable') || 
        msg.includes('timeout') ||
        msg.includes('ECONNRESET') ||
        msg.includes('ENOTFOUND');

      console.warn(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –¥–ª—è ${actionName} –Ω–µ —É–¥–∞–ª–∞—Å—å:`, msg);

      if (isRetryable && attempt < maxRetries) {
        const delay = Math.pow(2, attempt - 1) * baseDelay;
        console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ ${delay} –º—Å –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...`);
        await new Promise(resolve => setTimeout(resolve, delay));
      } else {
        break; // –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–∏ —Ñ–∞—Ç–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
      }
    }
  }
  console.error(`‚ùå –í—Å–µ ${maxRetries} –ø–æ–ø—ã—Ç–æ–∫ ${actionName} –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å.`);
  throw lastError;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏
 */
async function runLiteraryCritique() {
  console.log('üîç –ó–∞–ø—É—Å–∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∂—É—Ä–Ω–∞–ª
  const journal = await readJSON(JOURNAL_PATH);
  if (!Array.isArray(journal) || journal.length === 0) {
    throw new Error('–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç ‚Äî –Ω–µ—á–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å.');
  }

  const lastEntry = journal[journal.length - 1];

  // –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∫–∞–∫ –≤ —ç—Å—Å–µ: "7 –æ–∫—Ç—è–±—Ä—è 2025 –≥–æ–¥–∞"
  const today = new Date().toLocaleDateString('ru-RU', {
    day: 'numeric',
    month: 'long',
    year: 'numeric'
  });

  // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∏–ª–µ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 3 –∑–∞–ø–∏—Å–µ–π
  const lastEntries = journal.slice(-3);
  const style_history = lastEntries.map(entry => ({
    date: entry.date,
    reflection_level: entry.reflection_level || '—Å—Ä–µ–¥–Ω–∏–π',
    tags: Array.isArray(entry.tags) ? entry.tags : [],
    word_count: (entry.entry || '').split(/\s+/).filter(w => w).length,
    // –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–∑–Ω–∞–∫ –º–µ—Ç–∞—Ñ–æ—Ä—ã ‚Äî –Ω–∞–ª–∏—á–∏–µ "–∫–∞–∫" –∏–ª–∏ "—Å–ª–æ–≤–Ω–æ"
    has_metaphor: /(?:–∫–∞–∫|—Å–ª–æ–≤–Ω–æ|–±—É–¥—Ç–æ|—Ç–æ—á–Ω–æ)\s/i.test(entry.entry || '')
  }));

  const critiqueData = {
    entry_date: today,
    current_mood_name: lastEntry.mood?.name || 'still',
    current_season: lastEntry.season || 'winter',
    current_context: lastEntry.context || '–ö–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.',
    entry_tags: lastEntry.tags || [],
    entry_reflection_level: lastEntry.reflection_level || '—Å—Ä–µ–¥–Ω–∏–π',
    entry_essay: lastEntry.raw_essay || '',
    entry_reflection: lastEntry.raw_reflection || '',
    style_history: style_history
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Ä–µ—Ç—Ä–∞—è–º–∏
  const rawResponse = await withRetry(
    () => generateCritique(critiqueData),
    MAX_RETRIES,
    BASE_DELAY_MS,
    '–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞'
  );

  // --- –ù–ê–ß–ê–õ–û: —É—Å–∏–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–∞—Ä—Å–∏–Ω–≥ JSON ---
  let analysis;
  if (typeof rawResponse === 'string' && rawResponse.trim() !== '') {
    try {
      // –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞
      const cleanJson = rawResponse
        .replace(/^```json\s*/i, '')
        .replace(/\s*```$/i, '')
        .trim();
      if (cleanJson) {
        analysis = JSON.parse(cleanJson);
      } else {
        throw new Error('–ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π JSON-–æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏.');
      }
    } catch (e) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç –∫—Ä–∏—Ç–∏–∫–∞:', e.message);
      console.error('üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏:');
      console.error(rawResponse);
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏');
    }
  } else {
    console.error('‚ùå –ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç (–Ω–µ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞).');
    console.error('üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ (—Ç–∏–ø):', typeof rawResponse);
    console.error('üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ (—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ):', rawResponse);
    throw new Error('–ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç');
  }
  // --- –ö–û–ù–ï–¶: —É—Å–∏–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–∞—Ä—Å–∏–Ω–≥ JSON ---

  // –£–¥–∞–ª—è–µ–º generated_at, –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –µ–≥–æ –¥–æ–±–∞–≤–∏–ª–∞ (—á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–ª —Å–∏—Å—Ç–µ–º–Ω—É—é –¥–∞—Ç—É)
  delete analysis.generated_at;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç–æ–π
  const result = {
    generated_at: new Date().toISOString(),
    ...analysis
  };

  await writeJSON(ANALYSIS_PATH, result);
  console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ ${ANALYSIS_PATH}`);

  // --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏ –≤ journal.json —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞ ---
  try {
    const { readJSON, writeJSON } = require('./utils/fileUtils');
    const { JOURNAL_PATH } = require('./config'); // –£–±–µ–¥–∏—Å—å, —á—Ç–æ JOURNAL_PATH –µ—Å—Ç—å –≤ config.js
    
    const journal = await readJSON(JOURNAL_PATH);
    if (!Array.isArray(journal) || journal.length === 0) {
      console.warn('‚ö†Ô∏è –ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞.');
    } else {
      const lastEntry = journal[journal.length - 1];

      // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–≥–∏ –∫—Ä–∏—Ç–∏–∫–∞ –∏–∑ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
      const criticTagsFromAnalysis = Array.isArray(result.tags_for_search) ? result.tags_for_search : [];
      if (criticTagsFromAnalysis.length > 0) {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ –∫—Ä–∏—Ç–∏–∫–∞ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –≤ –∑–∞–ø–∏—Å—å
        lastEntry.critic_tags = criticTagsFromAnalysis;

        console.log(`üè∑Ô∏è –¢–µ–≥–∏ –∫—Ä–∏—Ç–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏:`, criticTagsFromAnalysis);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∂—É—Ä–Ω–∞–ª
        await writeJSON(JOURNAL_PATH, journal);
        console.log('‚úÖ –ñ—É—Ä–Ω–∞–ª –æ–±–Ω–æ–≤–ª—ë–Ω —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞.');
      } else {
        console.warn('‚ö†Ô∏è –í –∞–Ω–∞–ª–∏–∑–µ –Ω–µ—Ç —Ç–µ–≥–æ–≤ –∫—Ä–∏—Ç–∏–∫–∞ (tags_for_search) –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–ø–∏—Å—å.');
      }
    }
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è journal.json —Å —Ç–µ–≥–∞–º–∏ –∫—Ä–∏—Ç–∏–∫–∞:', e.message);
    // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ —Ç–µ–≥–∏ –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å
  }
}

module.exports = { runLiteraryCritique };

// --- –ó–∞–ø—É—Å–∫ –Ω–∞–ø—Ä—è–º—É—é ---
if (require.main === module) {
  (async () => {
    try {
      await runLiteraryCritique();
    } catch (err) {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ literary_critic.js:', err.message);
      process.exit(1);
    }
  })();
}
