# vk_poster.py
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
–° —Ç–µ–∫—Å—Ç–æ–º –∏–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –≠–ª–∞—Ä—ã –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
"""

import os
import json
import requests
from datetime import datetime

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
try:
    from post_generator import create_post, load_latest_entry
    from image_generator import generate_image_prompt, call_llm_for_image_prompt, generate_image, download_image
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    exit(1)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
VK_GROUP_ID = os.getenv("VK_GROUP_ID")
VK_ACCESS_TOKEN = os.getenv("VK_ACCESS_TOKEN")
VK_API_VERSION = "5.131"

# –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
IMAGE_DIR = "images"
os.makedirs(IMAGE_DIR, exist_ok=True)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
def get_wall_upload_server():
    url = "https://api.vk.com/method/photos.getWallUploadServer"
    params = {
        "group_id": VK_GROUP_ID,
        "access_token": VK_ACCESS_TOKEN,
        "v": VK_API_VERSION
    }
    response = requests.get(url, params=params)
    data = response.json()
    if "response" in data:
        return data["response"]["upload_url"]
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", data)
        return None


def upload_image_to_server(upload_url, image_path):
    files = {"photo": open(image_path, "rb")}
    response = requests.post(upload_url, files=files)
    return response.json()


def save_wall_photo(photo, server, hash_value):
    url = "https://api.vk.com/method/photos.saveWallPhoto"
    params = {
        "group_id": VK_GROUP_ID,
        "photo": photo,
        "server": server,
        "hash": hash_value,
        "access_token": VK_ACCESS_TOKEN,
        "v": VK_API_VERSION
    }
    response = requests.post(url, params=params)
    data = response.json()
    if "response" in data:
        photo_data = data["response"][0]
        return f"photo{photo_data['owner_id']}_{photo_data['id']}"
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ:", data)
        return None


def post_to_vk(message, attachment=None):
    url = "https://api.vk.com/method/wall.post"
    params = {
        "owner_id": -int(VK_GROUP_ID),
        "from_group": 1,
        "message": message,
        "signed": 0,
        "access_token": VK_ACCESS_TOKEN,
        "v": VK_API_VERSION
    }
    if attachment:
        params["attachments"] = attachment

    response = requests.post(url, params=params)
    return response.json()


def main():
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ—Å—Ç–∞ –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ...")

    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
    entry = load_latest_entry()
    if not entry:
        print("‚ùå –ù–µ—á–µ–≥–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å")
        return

    # 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
    try:
        post_text = create_post(entry)
        print("‚úÖ –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
        return

    # 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    reflection_text = entry.get("entry", "")
    image_path = None

    if reflection_text.strip():
        try:
            print("üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")

            # –®–∞–≥ 1: –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            prompt = generate_image_prompt(reflection_text)
            image_prompt = call_llm_for_image_prompt(prompt)
            print(f"üñºÔ∏è –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_prompt}")

            # –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            image_url = generate_image(image_prompt)
            if image_url:
                # –®–∞–≥ 3: –°–∫–∞—á–∏–≤–∞–µ–º
                filename = f"elara_{datetime.now().strftime('%Y%m%d_%H%M%S')}.png"
                image_path = download_image(image_url, filename)
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
    else:
        print("‚ö†Ô∏è –†–µ—Ñ–ª–µ–∫—Å–∏—è –ø—É—Å—Ç–∞ ‚Äî –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è")

    # 4. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –í–ö (–µ—Å–ª–∏ –µ—Å—Ç—å)
    attachment = None
    if image_path and os.path.exists(image_path):
        try:
            upload_url = get_wall_upload_server()
            if upload_url:
                upload_data = upload_image_to_server(upload_url, image_path)
                photo_data = save_wall_photo(
                    upload_data["photo"],
                    upload_data["server"],
                    upload_data["hash"]
                )
                if photo_data:
                    attachment = photo_data
                    print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ –í–ö")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –í–ö: {e}")

    # 5. –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç
    try:
        result = post_to_vk(post_text, attachment)
        if "response" in result:
            post_id = result["response"]["post_id"]
            print(f"‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: https://vk.com/club{VK_GROUP_ID}?w=wall-{VK_GROUP_ID}_{post_id}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {result}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API –í–ö: {e}")


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not VK_GROUP_ID:
        print("‚ùå VK_GROUP_ID –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        exit(1)
    if not VK_ACCESS_TOKEN:
        print("‚ùå VK_ACCESS_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        exit(1)

    main()
