# vk_poster.py
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏ —Ç–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
"""

import os
import json
import requests
import glob
from datetime import datetime
from post_generator import create_post, load_latest_entry

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
VK_GROUP_ID = os.getenv("VK_GROUP_ID")        # –Ω–∞–ø—Ä–∏–º–µ—Ä: 222111000
VK_ACCESS_TOKEN = os.getenv("VK_ACCESS_TOKEN") # —Ç–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
VK_API_VERSION = "5.199"

def get_wall_upload_server():
    """–ü–æ–ª—É—á–∞–µ—Ç –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    url = "https://api.vk.ru/method/photos.getWallUploadServer"
    params = {
        "group_id": VK_GROUP_ID,
        "access_token": VK_ACCESS_TOKEN,
        "v": VK_API_VERSION
    }
    response = requests.get(url, params=params)
    data = response.json()
    if 'error' in data:
        raise Exception(f"VK API Error getting upload server: {data['error']}")
    return data["response"]["upload_url"]


def upload_image_to_server(upload_url, image_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö"""
    with open(image_path, "rb") as f:
        files = {"photo": f}
        response = requests.post(upload_url, files=files)
    data = response.json()
    if 'error' in data:
        raise Exception(f"VK API Error uploading photo: {data['error']}")
    return data


def save_wall_photo(photo, server, hash_value):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–æ—Ç–æ –≤ –∞–ª—å–±–æ–º–µ –≥—Ä—É–ø–ø—ã"""
    url = "https://api.vk.ru/method/photos.saveWallPhoto"
    params = {
        "group_id": VK_GROUP_ID,
        "photo": photo,
        "server": server,
        "hash": hash_value,
        "access_token": VK_ACCESS_TOKEN,
        "v": VK_API_VERSION
    }
    response = requests.post(url, params=params)
    data = response.json()
    if 'error' in data:
        raise Exception(f"VK API Error saving photo: {data['error']}")
    return data["response"][0]  # attachment object


def post_to_vk(message, attachment=None):
    """–ü—É–±–ª–∏–∫—É–µ—Ç –ø–æ—Å—Ç –Ω–∞ —Å—Ç–µ–Ω–µ –≥—Ä—É–ø–ø—ã"""
    url = "https://api.vk.ru/method/wall.post"
    params = {
        "owner_id": -int(VK_GROUP_ID),
        "from_group": 1,
        "message": message,
        "signed": 0,
        "access_token": VK_ACCESS_TOKEN,
        "v": VK_API_VERSION
    }
    if attachment:
        params["attachments"] = attachment

    response = requests.post(url, params=params)
    return response.json()


def get_latest_image_from_folder(folder_path="data/images/"):
    """–ù–∞—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫–µ"""
    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    extensions = ["*.webp", "*.png", "*.jpg", "*.jpeg"]
    image_files = []
    for ext in extensions:
        # –ò—â–µ–º —Ñ–∞–π–ª—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
        image_files.extend(glob.glob(os.path.join(folder_path, ext)))
        image_files.extend(glob.glob(os.path.join(folder_path, ext.upper()))) # –¥–ª—è *.WEBP –∏ —Ç.–ø.

    if not image_files:
        print(f"üñºÔ∏è –í –ø–∞–ø–∫–µ {folder_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
        return None

    # –ù–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª —Å —Å–∞–º–æ–π –ø–æ–∑–¥–Ω–µ–π –¥–∞—Ç–æ–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ (mtime)
    latest_file = max(image_files, key=os.path.getmtime)
    latest_time = datetime.fromtimestamp(os.path.getmtime(latest_file))
    print(f"üñºÔ∏è –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {latest_file} (–∏–∑–º–µ–Ω–µ–Ω–æ: {latest_time.strftime('%Y-%m-%d %H:%M:%S')})")
    return latest_file


def main():
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ—Å—Ç–∞ –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ...")

    # 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
    entry = load_latest_entry()
    if not entry:
        print("‚ùå –ù–µ—á–µ–≥–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å")
        return

    post_text = create_post(entry)

    # 2. –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image_path = get_latest_image_from_folder()

    if not image_path or not os.path.exists(image_path):
        print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –ø—É—Ç—å –Ω–µ–≤–µ—Ä–µ–Ω: {image_path} ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è –±–µ–∑ —Ñ–æ—Ç–æ")
        result = post_to_vk(post_text)
    else:
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            upload_url = get_wall_upload_server()

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            upload_data = upload_image_to_server(upload_url, image_path)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –≤ –∞–ª—å–±–æ–º–µ
            photo_data = save_wall_photo(
                upload_data["photo"],
                upload_data["server"],
                upload_data["hash"]
            )

            # –§–æ—Ä–º–∏—Ä—É–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ
            attachment = f"photo{photo_data['owner_id']}_{photo_data['id']}"

            # –ü—É–±–ª–∏–∫—É–µ–º —Å —Ñ–æ—Ç–æ
            result = post_to_vk(post_text, attachment)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º: {e}")
            print("üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
            result = post_to_vk(post_text)

    # 3. –†–µ–∑—É–ª—å—Ç–∞—Ç
    if "response" in result:
        print(f"‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: https://vk.com/club{VK_GROUP_ID}")
        print(f"Post ID: {result['response']['post_id']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {result}")


if __name__ == "__main__":
    main()
